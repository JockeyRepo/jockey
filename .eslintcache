{"C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\pull.js":{"size":735,"mtime":1539849208382,"results":{"filePath":"C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\pull.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Resolve error: Cannot find module 'C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\webpack.config.eslint.js'","line":1,"column":1,"nodeType":null},{"ruleId":"import/order","severity":2,"message":"Resolve error: Cannot find module 'C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\webpack.config.eslint.js'","line":1,"column":1,"nodeType":null},{"ruleId":"import/no-self-import","severity":2,"message":"Resolve error: Cannot find module 'C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\webpack.config.eslint.js'","line":1,"column":1,"nodeType":null},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'axios'.","line":1,"column":23,"nodeType":"Literal","endLine":1,"endColumn":30},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":32,"nodeType":"Program","fix":{"range":[31,33],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":33,"nodeType":"Program","fix":{"range":[65,67],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":3,"column":1,"nodeType":"Program","fix":{"range":[67,69],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":4,"column":20,"nodeType":"Program","fix":{"range":[88,90],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":5,"column":97,"nodeType":"Program","fix":{"range":[186,188],"text":"\n"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":6,"column":11,"nodeType":"ArrowFunctionExpression","endLine":9,"endColumn":6},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":6,"column":19,"nodeType":"Program","fix":{"range":[206,208],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":7,"column":52,"nodeType":"Program","fix":{"range":[259,261],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":8,"column":25,"nodeType":"Program","fix":{"range":[285,287],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":9,"column":7,"nodeType":"Program","fix":{"range":[293,295],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":10,"column":20,"nodeType":"Program","fix":{"range":[314,316],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":11,"column":27,"nodeType":"Program","fix":{"range":[342,344],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":12,"column":7,"nodeType":"Program","fix":{"range":[350,352],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":13,"column":7,"nodeType":"Program","fix":{"range":[358,360],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":14,"column":1,"nodeType":"Program","fix":{"range":[360,362],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'createParty' is assigned a value but never used.","line":15,"column":7,"nodeType":"Identifier","endLine":15,"endColumn":18},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":15,"column":28,"nodeType":"Program","fix":{"range":[389,391],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":16,"column":82,"nodeType":"Program","fix":{"range":[472,474],"text":"\n"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":17,"column":11,"nodeType":"ArrowFunctionExpression","endLine":20,"endColumn":6},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":17,"column":19,"nodeType":"Program","fix":{"range":[492,494],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":18,"column":66,"nodeType":"Program","fix":{"range":[559,561],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":19,"column":25,"nodeType":"Program","fix":{"range":[585,587],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":20,"column":7,"nodeType":"Program","fix":{"range":[593,595],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":21,"column":20,"nodeType":"Program","fix":{"range":[614,616],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":22,"column":27,"nodeType":"Program","fix":{"range":[642,644],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":23,"column":7,"nodeType":"Program","fix":{"range":[650,652],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":24,"column":2,"nodeType":"Program","fix":{"range":[653,655],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":25,"column":1,"nodeType":"Program","fix":{"range":[655,657],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":26,"column":1,"nodeType":"Program","fix":{"range":[657,659],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":27,"column":1,"nodeType":"Program","fix":{"range":[659,661],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":28,"column":33,"nodeType":"Program","fix":{"range":[693,695],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":29,"column":35,"nodeType":"Program","fix":{"range":[729,731],"text":"\n"}}],"errorCount":36,"warningCount":0,"fixableErrorCount":29,"fixableWarningCount":0,"source":null},"hashOfConfig":"1dks4bj"},"C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\fetch.js":{"size":640,"mtime":1539849318167,"results":{"filePath":"C:\\Users\\tohle\\Documents\\GitHub\\jockey\\app\\fetch.js","messages":[{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":1,"column":1,"nodeType":"Line","endLine":1,"endColumn":47,"fix":{"range":[2,2],"text":" "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":47,"nodeType":"Program","fix":{"range":[46,48],"text":"\n"}},{"ruleId":"prefer-const","severity":2,"message":"'qu' is never reassigned. Use 'const' instead.","line":2,"column":5,"nodeType":"Identifier","endLine":2,"endColumn":7,"fix":{"range":[48,51],"text":"const"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":12,"nodeType":"Program","fix":{"range":[59,61],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":3,"column":1,"nodeType":"Program","fix":{"range":[61,63],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":4,"column":20,"nodeType":"Program","fix":{"range":[82,84],"text":"\n"}},{"ruleId":"no-undef","severity":2,"message":"'axios' is not defined.","line":5,"column":5,"nodeType":"Identifier","endLine":5,"endColumn":10},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":5,"column":5,"nodeType":"ExpressionStatement","endLine":19,"endColumn":7},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":5,"column":62,"nodeType":"Program","fix":{"range":[145,147],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":6,"column":19,"nodeType":"Program","fix":{"range":[165,167],"text":"\n"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":7,"column":9,"nodeType":"ForOfStatement","endLine":18,"endColumn":10},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":7,"column":9,"nodeType":"ForOfStatement","endLine":18,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'req' is not defined.","line":7,"column":13,"nodeType":"Identifier","endLine":7,"endColumn":16},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":7,"column":31,"nodeType":"Program","fix":{"range":[197,199],"text":"\n"}},{"ruleId":"no-undef","severity":2,"message":"'req' is not defined.","line":8,"column":29,"nodeType":"Identifier","endLine":8,"endColumn":32},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":8,"column":46,"nodeType":"Program","fix":{"range":[244,246],"text":"\n"}},{"ruleId":"no-undef","severity":2,"message":"'req' is not defined.","line":9,"column":25,"nodeType":"Identifier","endLine":9,"endColumn":28},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":9,"column":41,"nodeType":"Program","fix":{"range":[286,288],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":10,"column":94,"nodeType":"Program","fix":{"range":[381,383],"text":"\n"}},{"ruleId":"no-undef","severity":2,"message":"'req' is not defined.","line":11,"column":19,"nodeType":"Identifier","endLine":11,"endColumn":22},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":11,"column":34,"nodeType":"Program","fix":{"range":[416,418],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":12,"column":36,"nodeType":"Program","fix":{"range":[453,455],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":13,"column":46,"nodeType":"Program","fix":{"range":[500,502],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":14,"column":46,"nodeType":"Program","fix":{"range":[547,549],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":15,"column":23,"nodeType":"Program","fix":{"range":[571,573],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":16,"column":24,"nodeType":"Program","fix":{"range":[596,598],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":17,"column":14,"nodeType":"Program","fix":{"range":[611,613],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":18,"column":10,"nodeType":"Program","fix":{"range":[622,624],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":19,"column":7,"nodeType":"Program","fix":{"range":[630,632],"text":"\n"}}],"errorCount":29,"warningCount":0,"fixableErrorCount":21,"fixableWarningCount":0,"source":null},"hashOfConfig":"1dks4bj"}}